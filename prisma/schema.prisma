// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mongodb"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Food {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    content   String
    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @map("userId") @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @map("userId") @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model AllowedUsers {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    username  String?   @unique
    email     String?   @unique
    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
}

type Image {
    url String?
    alt String?
}

type Tags {
    tag String[]
}

type Dish {
    description String?
    price       Int?
    title       String?
    image       Image?
    tags        Tags?
    quantity    Int
}

type Cart {
    dish Dish[]
}

type Customer {
    firstName String
    lastName  String
    email     String
    phone     String
    comment   String?
}

enum Orderstatus {
    recieved
    ongoing
    completed
}

model Order {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    createdAt   DateTime?   @default(now())
    cart        Cart
    customer    Customer
    orderStatus Orderstatus @default(recieved)
    totalPrice  Int
}
